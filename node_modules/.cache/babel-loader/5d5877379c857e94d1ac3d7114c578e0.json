{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yusuf\\\\Desktop\\\\Clarusway\\\\Github-Projects\\\\netflix-clone-v2\\\\src\\\\components\\\\player\\\\index.js\";\nimport React, { useState, useContext, createContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Container, Button, Overlay, Inner, Close } from './styles/player';\nexport const PlayerContext = createContext();\nexport default function Player({\n  children,\n  ...restProps\n}) {\n  const [showPlayer, setShowPlayer] = useState(false);\n  return /*#__PURE__*/React.createElement(PlayerContext.Provider, {\n    value: {\n      showPlayer,\n      setShowPlayer\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, Object.assign({}, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }), children));\n}\n\nPlayer.Video = function PlayerVideo({\n  src,\n  ...restProps\n}) {\n  const {\n    showPlayer,\n    setShowPlayer\n  } = useContext(PlayerContext);\n  return showPlayer ? ReactDOM.createPortal( /*#__PURE__*/React.createElement(Overlay, {\n    onClick: () => setShowPlayer(false),\n    \"data-testid\": \"player\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Inner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"video\", {\n    id: \"netflix-player\",\n    controls: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"source\", {\n    src: src,\n    type: \"video/mp4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Close, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }))), document.body) : null;\n};\n\nPlayer.Button = function PlayerButton({ ...restProps\n}) {\n  const {\n    showPlayer,\n    setShowPlayer\n  } = useContext(PlayerContext);\n  return /*#__PURE__*/React.createElement(Button, Object.assign({\n    onClick: () => setShowPlayer(showPlayer => !showPlayer)\n  }, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }), \"Play\");\n};","map":{"version":3,"sources":["C:/Users/Yusuf/Desktop/Clarusway/Github-Projects/netflix-clone-v2/src/components/player/index.js"],"names":["React","useState","useContext","createContext","ReactDOM","Container","Button","Overlay","Inner","Close","PlayerContext","Player","children","restProps","showPlayer","setShowPlayer","Video","PlayerVideo","src","createPortal","document","body","PlayerButton"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,aAAtC,QAA2D,OAA3D;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,OAA5B,EAAqCC,KAArC,EAA4CC,KAA5C,QAAyD,iBAAzD;AAEA,OAAO,MAAMC,aAAa,GAAGP,aAAa,EAAnC;AAEP,eAAe,SAASQ,MAAT,CAAgB;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAhB,EAA4C;AACzD,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,KAAD,CAA5C;AAEA,sBACE,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAEa,MAAAA,UAAF;AAAcC,MAAAA;AAAd,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD,oBAAeF,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA2BD,QAA3B,CADF,CADF;AAKD;;AAEDD,MAAM,CAACK,KAAP,GAAe,SAASC,WAAT,CAAqB;AAAEC,EAAAA,GAAF;AAAO,KAAGL;AAAV,CAArB,EAA4C;AACzD,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAgCb,UAAU,CAACQ,aAAD,CAAhD;AAEA,SAAOI,UAAU,GACbV,QAAQ,CAACe,YAAT,eACE,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAE,MAAMJ,aAAa,CAAC,KAAD,CAArC;AAA8C,mBAAY,QAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,EAAE,EAAC,gBAAV;AAA2B,IAAA,QAAQ,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,GAAG,EAAEG,GAAb;AAAkB,IAAA,IAAI,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CADF,EASEE,QAAQ,CAACC,IATX,CADa,GAYb,IAZJ;AAaD,CAhBD;;AAkBAV,MAAM,CAACL,MAAP,GAAgB,SAASgB,YAAT,CAAsB,EAAE,GAAGT;AAAL,CAAtB,EAAwC;AACtD,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAgCb,UAAU,CAACQ,aAAD,CAAhD;AAEA,sBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMK,aAAa,CAAED,UAAD,IAAgB,CAACA,UAAlB;AAApC,KAAuED,SAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAKD,CARD","sourcesContent":["import React, { useState, useContext, createContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Container, Button, Overlay, Inner, Close } from './styles/player';\n\nexport const PlayerContext = createContext();\n\nexport default function Player({ children, ...restProps }) {\n  const [showPlayer, setShowPlayer] = useState(false);\n\n  return (\n    <PlayerContext.Provider value={{ showPlayer, setShowPlayer }}>\n      <Container {...restProps}>{children}</Container>\n    </PlayerContext.Provider>\n  );\n}\n\nPlayer.Video = function PlayerVideo({ src, ...restProps }) {\n  const { showPlayer, setShowPlayer } = useContext(PlayerContext);\n\n  return showPlayer\n    ? ReactDOM.createPortal(\n        <Overlay onClick={() => setShowPlayer(false)} data-testid=\"player\">\n          <Inner>\n            <video id=\"netflix-player\" controls>\n              <source src={src} type=\"video/mp4\" />\n            </video>\n            <Close />\n          </Inner>\n        </Overlay>,\n        document.body\n      )\n    : null;\n};\n\nPlayer.Button = function PlayerButton({ ...restProps }) {\n  const { showPlayer, setShowPlayer } = useContext(PlayerContext);\n\n  return (\n    <Button onClick={() => setShowPlayer((showPlayer) => !showPlayer)} {...restProps}>\n      Play\n    </Button>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}