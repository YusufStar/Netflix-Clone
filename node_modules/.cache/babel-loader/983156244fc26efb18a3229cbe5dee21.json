{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yusuf\\\\Desktop\\\\Clarusway\\\\Github-Projects\\\\netflix-clone-v2\\\\src\\\\components\\\\accordion\\\\index.js\";\nimport React, { useState, useContext, createContext } from 'react';\nimport { Container, Frame, Title, Item, Inner, Header, Body } from './styles/accordion';\nconst ToggleContext = createContext();\nexport default function Accordion({\n  children,\n  ...restProps\n}) {\n  return /*#__PURE__*/React.createElement(Container, Object.assign({}, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Inner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, children));\n}\n\nAccordion.Title = function AccordionTitle({\n  children,\n  ...restProps\n}) {\n  return /*#__PURE__*/React.createElement(Title, Object.assign({}, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 10\n    }\n  }), children);\n};\n\nAccordion.Frame = function AccordionFrame({\n  children,\n  ...restProps\n}) {\n  return /*#__PURE__*/React.createElement(Frame, Object.assign({}, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 10\n    }\n  }), children);\n};\n\nAccordion.Item = function AccordionItem({\n  children,\n  ...restProps\n}) {\n  const [toggleShow, setToggleShow] = useState(false);\n  return /*#__PURE__*/React.createElement(ToggleContext.Provider, {\n    value: {\n      toggleShow,\n      setToggleShow\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Item, Object.assign({}, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), children));\n};\n\nAccordion.Header = function AccordionHeader({\n  children,\n  ...restProps\n}) {\n  const {\n    toggleShow,\n    setToggleShow\n  } = useContext(ToggleContext);\n  return /*#__PURE__*/React.createElement(Header, Object.assign({\n    onClick: () => setToggleShow(!toggleShow)\n  }, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }), children, toggleShow ? /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/images/icons/close-slim.png\",\n    alt: \"Close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/images/icons/add.png\",\n    alt: \"Open\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }));\n};\n\nAccordion.Body = function AccordionBody({\n  children,\n  ...restProps\n}) {\n  const {\n    toggleShow\n  } = useContext(ToggleContext);\n  /* return toggleShow ? <Body {...restProps}>{children}</Body> : null; */\n\n  return /*#__PURE__*/React.createElement(Body, Object.assign({\n    className: toggleShow ? 'open' : 'closed'\n  }, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, children));\n};","map":{"version":3,"sources":["C:/Users/Yusuf/Desktop/Clarusway/Github-Projects/netflix-clone-v2/src/components/accordion/index.js"],"names":["React","useState","useContext","createContext","Container","Frame","Title","Item","Inner","Header","Body","ToggleContext","Accordion","children","restProps","AccordionTitle","AccordionFrame","AccordionItem","toggleShow","setToggleShow","AccordionHeader","AccordionBody"],"mappings":"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","sourcesContent":["import React, { useState, useContext, createContext } from 'react';\nimport { Container, Frame, Title, Item, Inner, Header, Body } from './styles/accordion';\n\nconst ToggleContext = createContext();\n\nexport default function Accordion({ children, ...restProps }) {\n  return (\n    <Container {...restProps}>\n      <Inner>{children}</Inner>\n    </Container>\n  );\n}\n\nAccordion.Title = function AccordionTitle({ children, ...restProps }) {\n  return <Title {...restProps}>{children}</Title>;\n};\n\nAccordion.Frame = function AccordionFrame({ children, ...restProps }) {\n  return <Frame {...restProps}>{children}</Frame>;\n};\n\nAccordion.Item = function AccordionItem({ children, ...restProps }) {\n  const [toggleShow, setToggleShow] = useState(false);\n\n  return (\n    <ToggleContext.Provider value={{ toggleShow, setToggleShow }}>\n      <Item {...restProps}>{children}</Item>\n    </ToggleContext.Provider>\n  );\n};\n\nAccordion.Header = function AccordionHeader({ children, ...restProps }) {\n  const { toggleShow, setToggleShow } = useContext(ToggleContext);\n\n  return (\n    <Header onClick={() => setToggleShow(!toggleShow)} {...restProps}>\n      {children}\n      {toggleShow ? (\n        <img src=\"/images/icons/close-slim.png\" alt=\"Close\" />\n      ) : (\n        <img src=\"/images/icons/add.png\" alt=\"Open\" />\n      )}\n    </Header>\n  );\n};\n\nAccordion.Body = function AccordionBody({ children, ...restProps }) {\n  const { toggleShow } = useContext(ToggleContext);\n\n  /* return toggleShow ? <Body {...restProps}>{children}</Body> : null; */\n\n  return (\n    <Body className={toggleShow ? 'open' : 'closed'} {...restProps}>\n      <span>{children}</span>\n    </Body>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}